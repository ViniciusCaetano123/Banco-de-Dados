C:\Program Files (x86)\MySQL\MySQL Connector Net 8.0.18\
SELECT * FROM clientes WHERE DATE_FORMAT(dataAtual, '%Y-%m-%d') = CURDATE()

SELECT  SUM(PROVA.QUESTOESCERTAS)/COUNT(PROVA.IDALUNO) AS MEDIACERTAS ,SUM(PROVA.QUESTOESCERTAS) AS TOTALDENOTASACERTADAS FROM ALUNO, PROVA WHERE aluno.ID = prova.IDALUNO

SELECT SUM(PROVA.QUESTOESCERTAS) AS TOTALDENOTASACERTADAS FROM ALUNO, PROVA WHERE aluno.ID = prova.IDALUNO

INSERT INTO TOTALNOTAS SELECT SUM(PROVA.QUESTOESCERTAS), SUM(PROVA.QUESTOESCERTAS)/COUNT(PROVA.IDALUNO) FROM ALUNO, PROVA WHERE aluno.ID = prova.IDALUNO

INSERT INTO TOTALNOTAS SELECT SUM(PROVA.QUESTOESCERTAS)/COUNT(PROVA.IDALUNO) ,SUM(PROVA.QUESTOESCERTAS) FROM ALUNO, PROVA WHERE aluno.ID = prova.IDALUNO


CRIANDO PROCEDURES EM MYSQL 

DELIMITER $$
CREATE PROCEDURE LISTALUNOS()
BEGIN
	SELECT * FROM ALUNO;
END $$
DELIMITER ;


/////////CRIANDO TRIGGER////////

DELIMITER //
CREATE TRIGGER quantCliAtual AFTER INSERT,DELETE ON clientes 
FOR EACH ROW BEGIN

	declare vquant int DEFAULT 0;

	SELECT count(id) into vquant FROM clientes WHERE DATE_FORMAT(dataAtual, '%Y-%m-%d') = CURDATE();

    UPDATE quantidades
    SET clientes =  vquant
    

END //

DELIMITER //
CREATE TRIGGER TOTAL_E_MEDIA AFTER INSERT ON TOTALNOTAS 
FOR EACH ROW BEGIN
	DELETE FROM  TOTALNOTAS;
	INSERT INTO TOTALNOTAS 
    SELECT SUM(PROVA.QUESTOESCERTAS), SUM(PROVA.QUESTOESCERTAS)/COUNT(PROVA.IDALUNO) FROM 	ALUNO, PROVA WHERE 		aluno.ID = prova.IDALUNO;
END //

DELIMITER //

CREATE TRIGGER ultimasAtualizaoes AFTER INSERT ON clientes 
FOR EACH ROW BEGIN

	declare vinsercao,vnome varchar(250) DEFAULT 'NULL';
	DECLARE vdataAtual datetime;
	
	set vinsercao = 'cadastrado';
	SELECT nome into vnome from clientes ORDER BY id DESC limit 1;
	SELECT dataAtual into vdataAtual from clientes ORDER BY id DESC limit 1;
    
	INSERT INTO registros(dataAtual,nome,descricao) VALUES(vdataAtual,vnome,vinsercao) ;
	

END //

DELIMITER $$
    CREATE TRIGGER cadastros AFTER INSERT ON cliente 
    FOR EACH ROW BEGIN

        INSERT INTO cadastros 
        SELECT dataCadastramento, nome from cliente LIMIT 1;

END$$

DELIMITER ;



CREATE PROCEDURE atualizaQuantidadesFuncionariosP ()
BEGIN

declare vquant int DEFAULT 0;

	SELECT count(id) into vquant FROM funcionarios 
	WHERE DATE_FORMAT(dataAtual, '%Y-%m-%d') = CURDATE();

    UPDATE quantidades
    SET funcionarios =  vquant;


END 

DELIMITER //
CREATE TRIGGER TOTAL_E_MEDIA AFTER INSERT ON PROVA 
FOR EACH ROW BEGIN
	DELETE FROM  TOTALNOTAS;
	INSERT INTO TOTALNOTAS 
    SELECT SUM(PROVA.QUESTOESCERTAS), SUM(PROVA.QUESTOESCERTAS)/COUNT(PROVA.IDALUNO) FROM 	ALUNO, PROVA WHERE 		aluno.ID = prova.IDALUNO;
END //
INSERT INTO `prova`(`IDALUNO`, `NOTA`, `QUESTOES`, `QUESTOESCERTAS`, `QUESTOESERRADAS`) VALUES (3,10,10,10,0)